//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mosaic.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mosaic.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About Mosaic.
        /// </summary>
        public static string OptionsAbout {
            get {
                return ResourceManager.GetString("OptionsAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Some icons provided by Austin Andrews, Ludacris and janek2012..
        /// </summary>
        public static string OptionsAboutIcons {
            get {
                return ResourceManager.GetString("OptionsAboutIcons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на About.
        /// </summary>
        public static string OptionsAboutTabHeader {
            get {
                return ResourceManager.GetString("OptionsAboutTabHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на apply.
        /// </summary>
        public static string OptionsApplyButton {
            get {
                return ResourceManager.GetString("OptionsApplyButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Autostart.
        /// </summary>
        public static string OptionsAutostart {
            get {
                return ResourceManager.GetString("OptionsAutostart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start Mosaic automatically with Windows.
        /// </summary>
        public static string OptionsAutostartCheckBox {
            get {
                return ResourceManager.GetString("OptionsAutostartCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Behaviour.
        /// </summary>
        public static string OptionsBehaviour {
            get {
                return ResourceManager.GetString("OptionsBehaviour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Background color.
        /// </summary>
        public static string OptionsBg {
            get {
                return ResourceManager.GetString("OptionsBg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Background image.
        /// </summary>
        public static string OptionsBgImage {
            get {
                return ResourceManager.GetString("OptionsBgImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Background image opacity:.
        /// </summary>
        public static string OptionsBgOpacity {
            get {
                return ResourceManager.GetString("OptionsBgOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на cancel.
        /// </summary>
        public static string OptionsCancelButton {
            get {
                return ResourceManager.GetString("OptionsCancelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на change.
        /// </summary>
        public static string OptionsChange {
            get {
                return ResourceManager.GetString("OptionsChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This software is protected by copyright law and distributed under Microsoft Public License..
        /// </summary>
        public static string OptionsCopyright {
            get {
                return ResourceManager.GetString("OptionsCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable widget animation.
        /// </summary>
        public static string OptionsEnableAnimation {
            get {
                return ResourceManager.GetString("OptionsEnableAnimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable windows thumbnails bar.
        /// </summary>
        public static string OptionsEnableThumbBar {
            get {
                return ResourceManager.GetString("OptionsEnableThumbBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enable fullscreen mode.
        /// </summary>
        public static string OptionsExclusiveMode {
            get {
                return ResourceManager.GetString("OptionsExclusiveMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        public static string OptionsGeneralTabHeader {
            get {
                return ResourceManager.GetString("OptionsGeneralTabHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language.
        /// </summary>
        public static string OptionsLanguage {
            get {
                return ResourceManager.GetString("OptionsLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show menu button.
        /// </summary>
        public static string OptionsMenuButton {
            get {
                return ResourceManager.GetString("OptionsMenuButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ok.
        /// </summary>
        public static string OptionsOkButton {
            get {
                return ResourceManager.GetString("OptionsOkButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changes will be applied after restarting Mosaic..
        /// </summary>
        public static string OptionsRestart {
            get {
                return ResourceManager.GetString("OptionsRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scroll background image when scrolling Mosaic.
        /// </summary>
        public static string OptionsScrollBg {
            get {
                return ResourceManager.GetString("OptionsScrollBg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Windows taskbar in fullscreen mode.
        /// </summary>
        public static string OptionsShowTaskbar {
            get {
                return ResourceManager.GetString("OptionsShowTaskbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show startup animation.
        /// </summary>
        public static string OptionsStartupAnim {
            get {
                return ResourceManager.GetString("OptionsStartupAnim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string OptionsTitle {
            get {
                return ResourceManager.GetString("OptionsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User interface.
        /// </summary>
        public static string OptionsUI {
            get {
                return ResourceManager.GetString("OptionsUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UI.
        /// </summary>
        public static string OptionsUITabHeader {
            get {
                return ResourceManager.GetString("OptionsUITabHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Version.
        /// </summary>
        public static string OptionsVersion {
            get {
                return ResourceManager.GetString("OptionsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mosaic options.
        /// </summary>
        public static string OptionsWindowTitle {
            get {
                return ResourceManager.GetString("OptionsWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на all.
        /// </summary>
        public static string PeopleHubAll {
            get {
                return ResourceManager.GetString("PeopleHubAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на favorites.
        /// </summary>
        public static string PeopleHubFavorites {
            get {
                return ResourceManager.GetString("PeopleHubFavorites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select friends that you want to pin on a start screen.
        /// </summary>
        public static string PeopleHubTip {
            get {
                return ResourceManager.GetString("PeopleHubTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на friends.
        /// </summary>
        public static string PeopleHubTitle {
            get {
                return ResourceManager.GetString("PeopleHubTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh.
        /// </summary>
        public static string RefreshItem {
            get {
                return ResourceManager.GetString("RefreshItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        public static string RemoveItem {
            get {
                return ResourceManager.GetString("RemoveItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Special.
        /// </summary>
        public static string Special {
            get {
                return ResourceManager.GetString("Special", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на back.
        /// </summary>
        public static string ToolbarBackItem {
            get {
                return ResourceManager.GetString("ToolbarBackItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на exit.
        /// </summary>
        public static string ToolbarExitItem {
            get {
                return ResourceManager.GetString("ToolbarExitItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на options.
        /// </summary>
        public static string ToolbarOptionsItem {
            get {
                return ResourceManager.GetString("ToolbarOptionsItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на friends.
        /// </summary>
        public static string ToolbarPeopleItem {
            get {
                return ResourceManager.GetString("ToolbarPeopleItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на application.
        /// </summary>
        public static string ToolbarPinAppItem {
            get {
                return ResourceManager.GetString("ToolbarPinAppItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на pin.
        /// </summary>
        public static string ToolbarPinItem {
            get {
                return ResourceManager.GetString("ToolbarPinItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на website.
        /// </summary>
        public static string ToolbarPinWebItem {
            get {
                return ResourceManager.GetString("ToolbarPinWebItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на add.
        /// </summary>
        public static string ToolbarWidgetsItem {
            get {
                return ResourceManager.GetString("ToolbarWidgetsItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на what&apos;s new?.
        /// </summary>
        public static string WhatsNew {
            get {
                return ResourceManager.GetString("WhatsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The content of this widget is visible only in fullscreen mode..
        /// </summary>
        public static string WidgetInvisible {
            get {
                return ResourceManager.GetString("WidgetInvisible", resourceCulture);
            }
        }
    }
}
